#!groovy
node {
    git url: 'https://github.com/uparulekar/DevOpsInsightsShellTutorial.git'

    withEnv([
            // Three environment variables are needed for DevOps Insights
            // IBM_CLOUD_DEVOPS_APP_NAME -> This is the name of the application that shows up in the dashboard
            // IBM_CLOUD_DEVOPS_TOOLCHAIN_ID -> This is your toolchain id, for this tutorial the value for it is set in the Jenkins configuration page
            // IBM_CLOUD_DEVOPS_API_KEY -> This is the api key for your account that also has access to the toolchain, the value for this is specified in Jenkins credentials.

            'IBM_CLOUD_DEVOPS_APP_NAME=Weather-App-Scripted',
    ]) {
        withCredentials([string(credentialsId: 'YOUR_API_KEY_ID', variable: 'IBM_CLOUD_DEVOPS_API_KEY')]) {

            stage('Build') {
                try {
                    bat '''                              
                        echo "Build...."                              
                    '''
                    // use "publishBuildRecord" method to publish build record
                    publishBuildRecord gitBranch: "master", gitCommit: "123234345", gitRepo: "https://test-iam-1", result:"SUCCESS"
                }
                catch (Exception e) {
                    publishBuildRecord gitBranch: "master", gitCommit: "123234345", gitRepo: "https://test-iam-1", result:"FAIL"
                }
            }

            stage('Upload Unit Test and Code Coverage') {
                bat '''                              
                        echo "Upload test results...."                              
                '''
                // use "publishTestResult" method to publish test result
                // publishTestResult type:'unittest', fileLocation: './mocha_pass.json'
                // publishTestResult type:'code', fileLocation: './istanbul_pass.json'
            }

            stage('Gate') {
                // use "evaluateGate" method to leverage IBM Cloud DevOps gate
                //evaluateGate policy: 'FirstPolicy', forceDecision: 'true'
            }

            stage('Deploy') {
                try {
                    bat '''                              
                        echo "Deploying...."                              
                    '''
                    // use "publishDeployRecord" method to publish test result
                    publishDeployRecord environment: "dev", appUrl: "https://test-iam-app-1", result:"SUCCESS"                       
                }
                catch (Exception e) {
                    publishDeployRecord environment: "dev", appUrl: "https://test-iam-app-1", result:"FAIL"                        
                }
            }
        }
    }
}
